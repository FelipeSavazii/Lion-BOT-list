from conn import db_connection

from discord.commands import slash_command
from discord.commands import Option
from discord.ext import commands
import discord

color = discord.Color.gold()

class Config(commands.Cog):
    def __init__(self, bot):
      self.bot = bot

    @slash_command(description="Configura√ß√£o do sistema de bot list. (somente administradores)")
    @discord.default_permissions(administrator=True)
    async def configura√ß√µes(self, ctx, 
                            correio: Option(discord.TextChannel, "Digite o ID do canal de correio."), 
                            logs: Option(discord.TextChannel, "Digite o ID do canal de logs."), 
                            bot_em_analise: Option(discord.Role, "Digite o ID do cargo que as aplica√ß√µes em an√°lise ir√£o receber."), 
                            bot_aprovado: Option(discord.Role, "Digite o ID do cargo que as aplica√ß√µes aprovadas ir√£o receber."), 
                            developer: Option(discord.Role, "Digite o ID do cargo que os desenvolvedores das aplica√ß√µes aprovadas ir√£o receber."),
                            verificador: Option(discord.Role, "Digite o ID do cargo que verificar√° as aplica√ß√µes.")):
      guild_id = ctx.guild.id
      try:
        conn = await db_connection()
        try:
          post = conn.execute('SELECT * FROM config WHERE guild_id = ?', (guild_id, )).fetchone()
          if post != None:
            conn.execute(
                        'UPDATE config SET correio_id = ?, logs_id = ?, cargo_analise_id = ?, cargo_aprovado_id = ?, cargo_dev_id = ?, cargo_verificador_id WHERE guild_id = ?',
                        (correio.id, logs.id, bot_em_analise.id, bot_aprovado.id, developer.id, verificador.id, guild_id))
          else:
            conn.execute(
                        'INSERT INTO config (guild_id, correio_id, logs_id, cargo_analise_id, cargo_aprovado_id, cargo_dev_id, cargo_verificador_id) VALUES (?, ?, ?, ?, ?, ?, ?)',
                        (guild_id, correio.id, logs.id, bot_em_analise.id, bot_aprovado.id, developer.id, verificador.id))
          conn.commit()
          conn.close()
        except Exception as e:
          print(e)
      except Exception as e:
        print(e)
      else:
        embed = discord.Embed(title="ü§ñ BOT LIST", description=f'Configura√ß√µes alteradas com sucesso.\n\n'
                              f'**CANAIS**:\n\nüì¨ {correio.mention}\nüì• {logs.mention}\n\n'
                              f'**CARGOS**:\n\nü§î {bot_em_analise.mention}\n‚úÖ {bot_aprovado.mention}\nüßë‚Äçüíª {developer.mention}', color=color)
        await ctx.respond(embed=embed, ephemeral=True)
      

def setup(bot):
    bot.add_cog(Config(bot))